{% if item.value.ssl is defined and item.value.ssl == True %}
server {

    listen [::]:80;
    listen 80;
    server_name {{ item.value.server_name }};

    return 301 https://$host$request_uri;
}
{% endif %}

server {

    server_name {{ item.value.server_name }};
    root {{ item.value.root }};

    {% if item.value.ssl is defined and item.value.ssl == True %}

    listen [::]:443 ssl;
    include snippets/ssl_params.conf;

    ssl_certificate /etc/letsencrypt/live/{{ item.value.server_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ item.value.server_name }}/privkey.pem;

    {% else %}

    listen [::]:80;
    listen 80;

    {% endif %}

    location /.well-known/acme-challenge {
        alias /var/www/letsencrypt/.well-known/acme-challenge;
        allow all;
    }

    # Prevents 502 bad gateway error
    large_client_header_buffers 8 32k;

    location /realtime {
        include snippets/websocket_proxy.conf;
        proxy_pass http://realtime;
        proxy_redirect off;
    }

    location /tracking {
        include snippets/websocket_proxy.conf;
        proxy_pass http://tracking;
        proxy_redirect off;
    }

    location /order-tracking {
        include snippets/websocket_proxy.conf;
        proxy_pass http://order-tracking;
        proxy_redirect off;
    }

    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /app.php$is_args$args;
    }
    # PROD
    location ~ ^/app\.php(/|$) {
        fastcgi_pass unix:/var/run/php7-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }

    error_log /var/log/nginx/{{ item.value.server_name }}.error.log;
    access_log /var/log/nginx/{{ item.value.server_name }}.access.log;
}