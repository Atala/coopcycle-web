{% extends "AppBundle::base.html.twig" %}

{% form_theme address_form 'bootstrap_3_layout.html.twig' %}

{% block title %}AppBundle:Index:index{% endblock %}

{% block body %}
<div class="container">
  <div class="row">

    <div class="col-xs-12">

      <div class="page-header">
        <h1>Ma commande</h1>
      </div>

      {% if cart %}

      <form method="post">

        <div class="list-group">
          {% for item in cart.items %}
          <a href="#" class="list-group-item js-add-to-cart" data-product-id="{{ item.id }}">
            {{ item.name }} x {{ item.quantity }}
            <span class="pull-right">{{ item.price * item.quantity }} €</span>
          </a>
          {% endfor %}
        </div>

        <div>
          <strong>Total : {{ cart.total }} €</strong>
        </div>

        <hr>

        <h2>Choisissez une adresse de livraison</h2>

        {% if addresses is empty %}
          {{ form_widget(address_form) }}
        {% else %}
          {% for address in addresses %}
          <div class="radio">
            <label>
              <input type="radio" name="deliveryAddress" value="{{ address.id }}">
              {{ address.streetAddress }} {{ address.postalCode }}
            </label>
          </div>
          {% endfor %}
        {% endif %}

        <hr>

        <button type="submit" class="btn btn-block btn-primary">Commander</button>

      </form>

      {% else %}

      Pas de commande en cours.

      {% endif %}

    </div>

  </div>
</div>
{% endblock %}

{% block scripts %}
{% if addresses is empty %}
<script>
var inputMap = {
  postal_code: 'form_postalCode',
  locality: 'form_addressLocality'
};
function initMap() {
  var addressInput = document.getElementById('form_streetAddress');
  var latitudeInput = document.getElementById('form_latitude');
  var longitudeInput = document.getElementById('form_longitude');

  var options = {
    componentRestrictions: {
      country: "fr"
    }
  };
  var autocomplete = new google.maps.places.Autocomplete(addressInput, options);
  autocomplete.addListener('place_changed', function() {
    var place = autocomplete.getPlace();
    latitudeInput.value = place.geometry.location.lat();
    longitudeInput.value = place.geometry.location.lng();
    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      var value = place.address_components[i].long_name;
      if (inputMap[addressType]) {
        document.getElementById(inputMap[addressType]).value = value;
      }
    }
  });
}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCAqNf8X0elLLXv5yeh0btsYpq47eCzIAw&signed_in=true&libraries=places&callback=initMap"
  async defer></script>
{% endif %}
{% endblock %}